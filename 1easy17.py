
f = open('17_easy.txt')  # открытие файла
m = [int(i) for i in f]  # создание массива со всеми числами в файле

elem_73 = [i for i in m if abs(i) % 100 == 73]  # массив с числами, оканчивающимися на 73
# берем обязательно модуль числа (так как есть отрицательные числа)

# Простая запись
# elem_73 = []
# for i in m:
#     if abs(i) % 100 == 73:
#         elem_73.append(i)

elem_73.sort()  # сортировка по возрастанию если понадобится проверить правильность значений
max_elem = max(elem_73)  # максимальный элемент последовательности, оканчивающийся на 73
# также можно вывести так - max_elem = elem_73[-1] ,так как массив уже отсортирован
print(max_elem)
result = []  # массив куда будем записывать куб полусуммы найденных пар

for i in range(0, len(m) - 1):  # цикл перебора пар начинается с 0 до длины массива m уменьшеннего на 1
    # (если это не сделать будет превышение диапозона)
    e1 = m[i]  # первый элемент пары
    e2 = m[i + 1]  # второй элемент пары
    kyb = int(((abs(e1) + abs(e2)) * 0.5) ** 3)  # куб полусуммы пары
    if abs(e1) % 10 == 6 and abs(e2) % 10 == 6 and kyb > max_elem ** 2:  # основное условие
        # берем обязательно модуль числа (так как есть отрицательные числа)
        result.append(kyb)  # добавление в массив куба полусуммы пары

result.sort()  # сортировка по возрастанию если понадобится проверить правильность значений
print(len(result), min(result))  # вывод ответа
# возможная запись print(len(result), result[-1])

